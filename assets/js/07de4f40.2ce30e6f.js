"use strict";(self.webpackChunkdeveloper_playcanvas_com=self.webpackChunkdeveloper_playcanvas_com||[]).push([[1039],{73922:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>n,metadata:()=>i,toc:()=>c});var o=t(74848),a=t(28453);const n={title:"File Handling",sidebar_position:5},s=void 0,i={id:"shader-editor/overview/file-handling",title:"File Handling",description:"Shader Editor is a browser-based tool. However the graphs, materials and textures created are stored locally on the user's machine.",source:"@site/docs/shader-editor/overview/file-handling.md",sourceDirName:"shader-editor/overview",slug:"/shader-editor/overview/file-handling",permalink:"/shader-editor/overview/file-handling",draft:!1,unlisted:!1,editUrl:"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/shader-editor/overview/file-handling.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"File Handling",sidebar_position:5},sidebar:"shaderEditorSidebar",previous:{title:"Textures",permalink:"/shader-editor/overview/textures"},next:{title:"Workflow",permalink:"/shader-editor/overview/workflow"}},d={},c=[{value:"Project Files",id:"project-files",level:3},{value:"Shader Packs",id:"shader-packs",level:3}];function l(e){const r={a:"a",h3:"h3",p:"p",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.p,{children:"Shader Editor is a browser-based tool. However the graphs, materials and textures created are stored locally on the user's machine."}),"\n",(0,o.jsx)(r.p,{children:"This section describes the various Shader Editor files."}),"\n",(0,o.jsx)(r.h3,{id:"project-files",children:"Project Files"}),"\n",(0,o.jsx)(r.p,{children:"When working in Shader Editor, the graphs, materials, textures and preview assets created are grouped together into a set of project files. Project files are written to the browser's local IndexDB database."}),"\n",(0,o.jsx)(r.p,{children:"This means that a project will remain consistent across page refreshes. Note that storing projects in the browser data also means that two different browsers on a local machine have different projects."}),"\n",(0,o.jsxs)(r.p,{children:["Projects can be saved to the local hard drive and loaded at a later time. For more information on this, see ",(0,o.jsx)(r.a,{href:"/shader-editor/window-layout/inspector-pane",children:"Inspector Pane"})," documentation."]}),"\n",(0,o.jsx)(r.h3,{id:"shader-packs",children:"Shader Packs"}),"\n",(0,o.jsx)(r.p,{children:"In order to use the materials created in Shader Editor, projects must be exported to Shader Packs."}),"\n",(0,o.jsx)(r.p,{children:"Shader packs don't contain the graphs and nodes from the project. Instead they contain the generated shader code and parameter values required for rendering the effects at runtime."}),"\n",(0,o.jsxs)(r.p,{children:["For more information on how to accomplish this, see ",(0,o.jsx)(r.a,{href:"/shader-editor/window-layout/inspector-pane",children:"Inspector Pane"})," documentation."]})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>s,x:()=>i});var o=t(96540);const a={},n=o.createContext(a);function s(e){const r=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(n.Provider,{value:r},e.children)}}}]);