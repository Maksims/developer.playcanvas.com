"use strict";(self.webpackChunkdeveloper_playcanvas_com=self.webpackChunkdeveloper_playcanvas_com||[]).push([[9709],{73351:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var o=t(85893),a=t(11151);const i={title:"Real-time Multiplayer with Photon",tags:["multiplayer","networking"],thumb:"https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/926999/90AE0A-image-75.jpg"},s=void 0,r={id:"tutorials/real-time-multiplayer-photon",title:"Real-time Multiplayer with Photon",description:"Click on the floor to move",source:"@site/docs/tutorials/real-time-multiplayer-photon.md",sourceDirName:"tutorials",slug:"/tutorials/real-time-multiplayer-photon",permalink:"/tutorials/real-time-multiplayer-photon",draft:!1,unlisted:!1,editUrl:"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/tutorials/real-time-multiplayer-photon.md",tags:[{label:"multiplayer",permalink:"/tags/multiplayer"},{label:"networking",permalink:"/tags/networking"}],version:"current",frontMatter:{title:"Real-time Multiplayer with Photon",tags:["multiplayer","networking"],thumb:"https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/926999/90AE0A-image-75.jpg"},sidebar:"tutorialsSidebar",previous:{title:"Real-time Multiplayer with Colyseus",permalink:"/tutorials/real-time-multiplayer-colyseus"},next:{title:"Real Time Multiplayer",permalink:"/tutorials/real-time-multiplayer"}},l={},c=[{value:"You will learn",id:"you-will-learn",level:2},{value:"Setup",id:"setup",level:2},{value:"PlayCanvas Project",id:"playcanvas-project",level:3},{value:"Photon account",id:"photon-account",level:3},{value:"Create a new app",id:"create-a-new-app",level:4},{value:"Select Photon Type and Application name.",id:"select-photon-type-and-application-name",level:4},{value:"Copy of AppID",id:"copy-of-appid",level:4},{value:"Download SDK",id:"download-sdk",level:3},{value:"Click SDK from the dashboard",id:"click-sdk-from-the-dashboard",level:4},{value:"Select RealTime JavaScript",id:"select-realtime-javascript",level:4},{value:"Click Download SDK",id:"click-download-sdk",level:4},{value:"Unzip the SDK",id:"unzip-the-sdk",level:4},{value:"Importing SDK",id:"importing-sdk",level:3},{value:"Upload the SDK on the editor",id:"upload-the-sdk-on-the-editor",level:4},{value:"Change Loading Type &quot;Asset&quot; to &quot;Before Engine&quot;",id:"change-loading-type-asset-to-before-engine",level:4},{value:"Multiplayer implementation",id:"multiplayer-implementation",level:2},{value:"Using Photon with PlayCanvas",id:"using-photon-with-playcanvas",level:3},{value:"Instantiate classes from PlayCanvas to use Photon",id:"instantiate-classes-from-playcanvas-to-use-photon",level:4},{value:"Set Script for Root entity",id:"set-script-for-root-entity",level:4},{value:"Paste AppId into the script attribute.",id:"paste-appid-into-the-script-attribute",level:4},{value:"Connect to the Photon master server",id:"connect-to-the-photon-master-server",level:3},{value:"Connect to the master server using <code>connectToRegionMaster</code>",id:"connect-to-the-master-server-using-connecttoregionmaster",level:4},{value:"Create or Join a room",id:"create-or-join-a-room",level:3},{value:"Join and Leave",id:"join-and-leave",level:3},{value:"Player Movement",id:"player-movement",level:4},{value:"Synchronize other players",id:"synchronize-other-players",level:3},{value:"Position synchronization using <strong>raiseEvent</strong>.",id:"position-synchronization-using-raiseevent",level:4},{value:"Changed to fire events when player moves",id:"changed-to-fire-events-when-player-moves",level:4},{value:"Done!",id:"done",level:3}];function h(n){const e={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("div",{className:"iframe-container",children:(0,o.jsx)("iframe",{loading:"lazy",src:"https://playcanv.as/e/p/dvJYXs1Y/",title:"Real-time Multiplayer with Photon - including matchmaking"})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.em,{children:"Click on the floor to move"})}),"\n",(0,o.jsxs)(e.p,{children:["The complete project including matchmaking can be found ",(0,o.jsx)(e.a,{href:"https://playcanvas.com/project/926999/",children:"here"}),"."]}),"\n",(0,o.jsx)(e.p,{children:"Photon (also known as PUN) is used in many games and has a JavaScript SDK available for HTML5 games."}),"\n",(0,o.jsx)(e.p,{children:"Photon is for free for projects with up to 20 online players (CCU)."}),"\n",(0,o.jsx)(e.h2,{id:"you-will-learn",children:"You will learn"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"How to add Photon SDK to PlayCanvas"}),"\n",(0,o.jsx)(e.li,{children:"Multiplayer implementation with Photon"}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"setup",children:"Setup"}),"\n",(0,o.jsx)(e.h3,{id:"playcanvas-project",children:"PlayCanvas Project"}),"\n",(0,o.jsxs)(e.p,{children:["We start by forking the ",(0,o.jsx)(e.a,{href:"https://playcanvas.com/project/954410/",children:"tutorial project here"}),"."]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:"/images/tutorials/multiplayer-photon/1.png",alt:"Empty Project"})}),"\n",(0,o.jsx)(e.h3,{id:"photon-account",children:"Photon account"}),"\n",(0,o.jsx)(e.p,{children:"Account registration is required to use the SDK and view documentation."}),"\n",(0,o.jsxs)(e.p,{children:["Create your Photon account ",(0,o.jsx)(e.a,{href:"https://www.photonengine.com/",children:"here"})," - (Photon Engine)."]}),"\n",(0,o.jsx)(e.h4,{id:"create-a-new-app",children:"Create a new app"}),"\n",(0,o.jsxs)(e.p,{children:["Click ",(0,o.jsx)(e.strong,{children:"CREATE NEW APP"})," from the dashboard"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:"/images/tutorials/multiplayer-photon/2.png",alt:"Create New Application"})}),"\n",(0,o.jsx)(e.h4,{id:"select-photon-type-and-application-name",children:"Select Photon Type and Application name."}),"\n",(0,o.jsx)(e.p,{children:"Enter the following"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Photon Type: RealTime"}),"\n",(0,o.jsx)(e.li,{children:"Name: PlayCanvas-Photon etc."}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:"/images/tutorials/multiplayer-photon/3.png",alt:"Create Real Time Project"})}),"\n",(0,o.jsx)(e.h4,{id:"copy-of-appid",children:"Copy of AppID"}),"\n",(0,o.jsx)(e.p,{children:"Please make a note of this AppId, as you will need it in the future."}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:"/images/tutorials/multiplayer-photon/4.png",alt:"App Id"})}),"\n",(0,o.jsx)(e.h3,{id:"download-sdk",children:"Download SDK"}),"\n",(0,o.jsx)(e.p,{children:"Download the SDK from the dashboard."}),"\n",(0,o.jsx)(e.h4,{id:"click-sdk-from-the-dashboard",children:"Click SDK from the dashboard"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:"/images/tutorials/multiplayer-photon/5.png",alt:"SDK"})}),"\n",(0,o.jsx)(e.h4,{id:"select-realtime-javascript",children:"Select RealTime JavaScript"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:"/images/tutorials/multiplayer-photon/6.png",alt:"JavaScript SDK"})}),"\n",(0,o.jsx)(e.h4,{id:"click-download-sdk",children:"Click Download SDK"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:"/images/tutorials/multiplayer-photon/7.png",alt:"Download SDK"})}),"\n",(0,o.jsx)(e.h4,{id:"unzip-the-sdk",children:"Unzip the SDK"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:"/images/tutorials/multiplayer-photon/8.png",alt:"Unzip SDK"})}),"\n",(0,o.jsxs)(e.p,{children:["The SDK will be downloaded in ZIP format, unzip it: ",(0,o.jsx)(e.code,{children:"photon-javascript-sdk_vX-X-X-X"})," \u2192 ",(0,o.jsx)(e.code,{children:"lib"})," \u2192 ",(0,o.jsx)(e.strong,{children:(0,o.jsx)(e.code,{children:"Photon-Javascript_SDK.min.js"})}),"."]}),"\n",(0,o.jsx)(e.h3,{id:"importing-sdk",children:"Importing SDK"}),"\n",(0,o.jsx)(e.p,{children:"Import the SDK you have just downloaded into the PlayCanvas editor."}),"\n",(0,o.jsx)(e.h4,{id:"upload-the-sdk-on-the-editor",children:"Upload the SDK on the editor"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:"/images/tutorials/multiplayer-photon/9.jpg",alt:"Upload SDK"})}),"\n",(0,o.jsx)(e.p,{children:"Drag and drop the SDK to the assets in the editor."}),"\n",(0,o.jsx)(e.h4,{id:"change-loading-type-asset-to-before-engine",children:'Change Loading Type "Asset" to "Before Engine"'}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:"/images/tutorials/multiplayer-photon/10.png",alt:"Change Loading Type"})}),"\n",(0,o.jsx)(e.h2,{id:"multiplayer-implementation",children:"Multiplayer implementation"}),"\n",(0,o.jsx)(e.p,{children:"The multiplayer implementation will do the following:"}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsx)(e.li,{children:"Use Photon class for real-time communication and Load Balancing"}),"\n",(0,o.jsx)(e.li,{children:"Connect to Photon master server"}),"\n",(0,o.jsx)(e.li,{children:"Create or Join a room"}),"\n",(0,o.jsx)(e.li,{children:"Synchronize other players' actions and movement"}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:["The ",(0,o.jsx)(e.a,{href:"https://doc-api.photonengine.com/en/javascript/current/Photon.LoadBalancing.LoadBalancingClient.html",children:"API reference"})," and ",(0,o.jsx)(e.a,{href:"https://doc.photonengine.com/ja-jp/quantum/v1/reference/glossary",children:"glossary"})," are available on Photon's site."]}),"\n",(0,o.jsx)(e.h3,{id:"using-photon-with-playcanvas",children:"Using Photon with PlayCanvas"}),"\n",(0,o.jsx)(e.h4,{id:"instantiate-classes-from-playcanvas-to-use-photon",children:"Instantiate classes from PlayCanvas to use Photon"}),"\n",(0,o.jsxs)(e.p,{children:["Create a script asset named ",(0,o.jsx)(e.strong,{children:"photon-loadbalancing-playcanvas.js"})," to the project to initialize Photon."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-javascript",children:'// photon-loadbalancing-playcanvas.js\nconst PhotonLoadBalancingPlayCanvas = pc.createScript("PhotonLoadBalancingPlayCanvas");\nPhotonLoadBalancingPlayCanvas.attributes.add("appId", { type: "string" });\nPhotonLoadBalancingPlayCanvas.attributes.add("appVersion", { type: "string", default: "1.0" });\nPhotonLoadBalancingPlayCanvas.attributes.add("wss", { type: "boolean", default: true });\nPhotonLoadBalancingPlayCanvas.attributes.add("region", {\n    type: "string", default: "jp",\n    description: "Photon Cloud has servers in several regions, distributed across multiple hosting centers over the world.You can choose optimized region for you.",\n    enum: [\n        { "Select Region": "default" },\n        { "Asia, Singapore": "asia" },\n        { "Australia, Melbourne": "au" },\n        { "Canada, East Montreal": "cae" },\n        { "Chinese Mainland (See Instructions)\tShanghai": "cn" },\n        { "Europe, Amsterdam": "eu" },\n        { "India, Chennai": "in" },\n        { "Japan, Tokyo": "jp" },\n        { "Russia Moscow": "ru" },\n        { "Russia, East Khabarovsk": "rue" },\n        { "South Africa Johannesburg": "za" },\n        { "South America, Sao Paulo": "sa" },\n        { "South Korea, Seoul": "kr" },\n        { "Turkey Istanbul": "tr" },\n        { "USA, East Washington": "us" },\n        { "USA, West San Jos\xe9": "usw" },\n    ],\n});\n\nPhotonLoadBalancingPlayCanvas.prototype.initialize = function () {\n\n    // Photon Settings\n    this.loadBalancingClient = new Photon.LoadBalancing.LoadBalancingClient(this.wss ? 1 : 0, this.appId, this.appVersion);\n\n    // pc.Application\n    this.loadBalancingClient.app = this.app;\n};\n'})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Photon.LoadBalancing.LoadBalancingClient"}),"  This class contains many of the features of the Photon SDK for real-time communication."]}),"\n"]}),"\n",(0,o.jsx)(e.h4,{id:"set-script-for-root-entity",children:"Set Script for Root entity"}),"\n",(0,o.jsxs)(e.p,{children:["Create a new script asset ",(0,o.jsx)(e.strong,{children:"photon-loadbalancing-playcanvas.js"})," and attach it to the Root entity in the Editor."]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:"/images/tutorials/multiplayer-photon/11.png",alt:"Root Entity - Inspector"})}),"\n",(0,o.jsx)(e.h4,{id:"paste-appid-into-the-script-attribute",children:"Paste AppId into the script attribute."}),"\n",(0,o.jsx)(e.p,{children:"Enter AppId as a script attribute."}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:"/images/tutorials/multiplayer-photon/12.png",alt:"Script Attributes"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-javascript",children:"this.loadBalancingClient = new Photon.LoadBalancing.LoadBalancingClient( this.wss ? 1 : 0, this.appId, this.appVersion );\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"wss"})," Secure connection via WebSocket."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"appId"})," The application identifier value."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"appVersion"})," Used for versioning. Different versions cannot be connected to each other."]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"connect-to-the-photon-master-server",children:"Connect to the Photon master server"}),"\n",(0,o.jsxs)(e.h4,{id:"connect-to-the-master-server-using-connecttoregionmaster",children:["Connect to the master server using ",(0,o.jsx)(e.code,{children:"connectToRegionMaster"})]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-javascript",children:"PhotonLoadBalancingPlayCanvas.prototype.initialize = function () {\n\n    // Photon Settings\n    this.loadBalancingClient = new Photon.LoadBalancing.LoadBalancingClient(this.wss ? 1 : 0, this.appId, this.appVersion);\n\n    // pc.Application\n    this.loadBalancingClient.app = this.app;\n\n    // Connect to the master server\n    if (!this.loadBalancingClient.isInLobby()) {\n        this.loadBalancingClient.connectToRegionMaster(this.region);\n    }\n};\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"connectToRegionMaster"})," Connects to the master server in the specified region."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"this.region"})," Used to configure the region."]}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"If you successfully connect to the lobby by running connectToRegionMaster, JoinedLobby will be displayed in the log."}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:"/images/tutorials/multiplayer-photon/13.png",alt:"Console Log"})}),"\n",(0,o.jsx)(e.h3,{id:"create-or-join-a-room",children:"Create or Join a room"}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"onRoomList"})," function is called when a connection is made to the lobby."]}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"JoinRandomOrCreateRoom"})," to join a room if it exists, or randomly join a room if it does not exist."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-javascript",children:'PhotonLoadBalancingPlayCanvas.prototype.initialize = function () {\n\n    // Photon Settings\n    this.loadBalancingClient = new Photon.LoadBalancing.LoadBalancingClient(this.wss ? 1 : 0, this.appId, this.appVersion);\n\n    // pc.Application\n    this.loadBalancingClient.app = this.app;\n\n    // Connect to the master server\n    if (!this.loadBalancingClient.isInLobby()) {\n        this.loadBalancingClient.connectToRegionMaster(this.region);\n    }\n\n    // Added\n    this.loadBalancingClient.onRoomList = this.onRoomList;\n    this.loadBalancingClient.onJoinRoom = this.onJoinRoom;\n};\n\nPhotonLoadBalancingPlayCanvas.prototype.onRoomList = function () {\n    this.joinRandomOrCreateRoom();\n};\n\nPhotonLoadBalancingPlayCanvas.prototype.onJoinRoom = function (createdByMe) {\n    console.log("Joined the room.");\n};\n'})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"onRoomList(rooms)"})," List of rooms in the lobby."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"joinRandomOrCreateRoom(options, createRoomName, createOptions)"})," Join to a random room. If the room does not exist, a new room will be created."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"onJoinRoom"})," When you join a room, this is called."]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"join-and-leave",children:"Join and Leave"}),"\n",(0,o.jsxs)(e.p,{children:["When a player joins a room, it is synchronized with other players.\nUse ",(0,o.jsx)(e.strong,{children:"onActorJoin"})," and ",(0,o.jsx)(e.strong,{children:"onActorLeave"}),"."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-javascript",children:'PhotonLoadBalancingPlayCanvas.prototype.initialize = function () {\n\n    // Photon Settings\n    this.loadBalancingClient = new Photon.LoadBalancing.LoadBalancingClient(this.wss ? 1 : 0, this.appId, this.appVersion);\n\n    // pc.Application\n    this.loadBalancingClient.app = this.app;\n\n    // Connect to the master server\n    if (!this.loadBalancingClient.isInLobby()) {\n        this.loadBalancingClient.connectToRegionMaster(this.region);\n    }\n\n    this.loadBalancingClient.onRoomList = this.onRoomList;\n    this.loadBalancingClient.onJoinRoom = this.onJoinRoom;\n\n    // Added\n    this.loadBalancingClient.onActorJoin = this.onActorJoin;\n    this.loadBalancingClient.onActorLeave = this.onActorLeave;\n};\n\nPhotonLoadBalancingPlayCanvas.prototype.onRoomList = function () {\n    this.joinRandomOrCreateRoom();\n};\n\nPhotonLoadBalancingPlayCanvas.prototype.onJoinRoom = function (createdByMe) {\n    console.log("Joined the room.");\n};\n\nPhotonLoadBalancingPlayCanvas.prototype.onActorJoin = function (actor) {\n    const { actorNr } = actor;\n    if (actor.isLocal) return;\n    const otherPlayer = new pc.Entity();\n    otherPlayer.addComponent("render", { type: "capsule" });\n    otherPlayer.setLocalPosition(0, 1, 0);\n    otherPlayer.name = actorNr;\n    this.app.root.children[0].addChild(otherPlayer);\n};\n\nPhotonLoadBalancingPlayCanvas.prototype.onActorLeave = function (actor) {\n    const { actorNr } = actor;\n    const otherPlayer = this.app.root.children[0].findByName(actorNr);\n    if (actor.isLocal || !otherPlayer) return;\n    otherPlayer.destroy();\n};\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:"/images/tutorials/multiplayer-photon/14.png",alt:"Actor"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"actor"})," contains ",(0,o.jsx)(e.code,{children:"name"}),", ",(0,o.jsx)(e.code,{children:"actorNr"}),", ",(0,o.jsx)(e.code,{children:"isLocal"}),", and ",(0,o.jsx)(e.code,{children:"userId"}),"."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"onActorJoin"})," when a new user connects, you can get the joined actor."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"onActorLeave"})," when a user is disconnected, you can get the disconnected actor."]}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:["If successful, the entity is added when the player joins.\n",(0,o.jsx)(e.img,{src:"/images/tutorials/multiplayer-photon/15.png",alt:"Console log - Actors "})]}),"\n",(0,o.jsx)(e.h4,{id:"player-movement",children:"Player Movement"}),"\n",(0,o.jsxs)(e.p,{children:["Create a new ",(0,o.jsx)(e.strong,{children:"player.js"})," for character movement."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-javascript",children:'const Player = pc.createScript("player");\n\nPlayer.prototype.update = function (dt) {\n    const pos = new pc.Vec3(0, 0, 0);\n    if (this.app.keyboard.isPressed(pc.KEY_LEFT)) {\n        pos.x = -dt;\n    }\n    if (this.app.keyboard.isPressed(pc.KEY_RIGHT)) {\n        pos.x = dt;\n    }\n    if (this.app.keyboard.isPressed(pc.KEY_UP)) {\n        pos.z = -dt;\n    }\n    if (this.app.keyboard.isPressed(pc.KEY_DOWN)) {\n        pos.z = dt;\n    }\n    if (!pos.equals(new pc.Vec3(0, 0, 0))) {\n        this.entity.translate(pos);\n    }\n};\n'})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"this.app.keyboard.isPressed:"})," check if the keyboard is pressed"]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"synchronize-other-players",children:"Synchronize other players"}),"\n",(0,o.jsxs)(e.p,{children:["Use ",(0,o.jsx)(e.strong,{children:"raiseEvent"})," and ",(0,o.jsx)(e.strong,{children:"onEvent"})," to synchronize the player's location."]}),"\n",(0,o.jsxs)(e.h4,{id:"position-synchronization-using-raiseevent",children:["Position synchronization using ",(0,o.jsx)(e.strong,{children:"raiseEvent"}),"."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-javascript",children:'const PhotonLoadBalancingPlayCanvas = pc.createScript("PhotonLoadBalancingPlayCanvas");\nPhotonLoadBalancingPlayCanvas.attributes.add("appId", { type: "string" });\nPhotonLoadBalancingPlayCanvas.attributes.add("appVersion", {\n    type: "string",\n    default: "1.0",\n});\nPhotonLoadBalancingPlayCanvas.attributes.add("wss", {\n    type: "boolean",\n    default: true,\n});\nPhotonLoadBalancingPlayCanvas.attributes.add("region", {\n    type: "string",\n    default: "jp",\n    description:\n        "Photon Cloud has servers in several regions, distributed across multiple hosting centers over the world.You can choose optimized region for you.",\n    enum: [\n        { "Select Region": "default" },\n        { "Asia, Singapore": "asia" },\n        { "Australia, Melbourne": "au" },\n        { "Canada, East Montreal": "cae" },\n        { "Chinese Mainland (See Instructions)\tShanghai": "cn" },\n        { "Europe, Amsterdam": "eu" },\n        { "India, Chennai": "in" },\n        { "Japan, Tokyo": "jp" },\n        { "Russia Moscow": "ru" },\n        { "Russia, East Khabarovsk": "rue" },\n        { "South Africa Johannesburg": "za" },\n        { "South America, Sao Paulo": "sa" },\n        { "South Korea, Seoul": "kr" },\n        { "Turkey Istanbul": "tr" },\n        { "USA, East Washington": "us" },\n        { "USA, West San Jos\xe9": "usw" },\n    ],\n});\n\nPhotonLoadBalancingPlayCanvas.prototype.initialize = function () {\n\n    // Photon Settings\n    this.loadBalancingClient = new Photon.LoadBalancing.LoadBalancingClient(this.wss ? 1 : 0, this.appId, this.appVersion);\n\n    // pc.Application\n    this.loadBalancingClient.app = this.app;\n\n    // Connect to the master server\n    if (!this.loadBalancingClient.isInLobby()) {\n        this.loadBalancingClient.connectToRegionMaster(this.region);\n    }\n    this.loadBalancingClient.onRoomList = this.onRoomList;\n    this.loadBalancingClient.onJoinRoom = this.onJoinRoom;\n    this.loadBalancingClient.onActorJoin = this.onActorJoin;\n    this.loadBalancingClient.onActorLeave = this.onActorLeave;\n\n    // Added\n    this.loadBalancingClient.onEvent = this.onEvent;\n    this.app.on("createOtherPlayerEntity", this.createOtherPlayerEntity, this);\n    this.app.on("loadbalancing:sendPlayerPosition", this.sendPlayerPosition, this);\n};\n\nPhotonLoadBalancingPlayCanvas.prototype.onRoomList = function () {\n    this.joinRandomOrCreateRoom();\n};\n\nPhotonLoadBalancingPlayCanvas.prototype.onJoinRoom = function (createdByMe) {\n    this.myRoomActorsArray().forEach((actor) => {\n        if (actor.isLocal) return;\n        this.app.fire("createOtherPlayerEntity", actor);\n    });\n};\n\nPhotonLoadBalancingPlayCanvas.prototype.onActorJoin = function (actor) {\n    if (actor.isLocal) return;\n    this.app.fire("createOtherPlayerEntity", actor);\n    const { x, y, z } = this.app.root.findByName("Player").getLocalPosition();\n    this.app.fire("loadbalancing:sendPlayerPosition", { x, y, z });\n};\n\nPhotonLoadBalancingPlayCanvas.prototype.onActorLeave = function (actor) {\n    const { actorNr } = actor;\n    const otherPlayer = this.app.root.findByName(actorNr);\n    if (actor.isLocal || !otherPlayer) return;\n    otherPlayer.destroy();\n};\n\nPhotonLoadBalancingPlayCanvas.prototype.createOtherPlayerEntity = function (actor) {\n    const { actorNr } = actor;\n    const entity = new pc.Entity();\n    entity.addComponent("render", { type: "capsule" });\n    entity.setLocalPosition(0, 1, 0);\n    entity.name = actorNr;\n    this.app.root.children[0].addChild(entity);\n};\n\nPhotonLoadBalancingPlayCanvas.prototype.sendPlayerPosition = function (position) {\n    this.loadBalancingClient.raiseEvent(1, { position });\n};\n\nPhotonLoadBalancingPlayCanvas.prototype.onEvent = function (code, content, actorNr) {\n    switch (code) {\n        case 1: {\n            const otherPlayer = this.app.root.findByName(actorNr);\n            if (otherPlayer) {\n                const { x, y, z } = content.position;\n                otherPlayer.setLocalPosition(x, y, z);\n            }\n            break;\n        }\n        default:\n    }\n};\n'})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"raiseEvent(eventCode,data, options)"})," send ",(0,o.jsx)(e.code,{children:"eventCode"})," and ",(0,o.jsx)(e.code,{children:"data"}),"."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"onEvent(code, content, actorNr)"})," receive data. Includes ",(0,o.jsx)(e.code,{children:"actorNr"})," and ",(0,o.jsx)(e.code,{children:"eventCode"}),"."]}),"\n"]}),"\n",(0,o.jsx)(e.h4,{id:"changed-to-fire-events-when-player-moves",children:"Changed to fire events when player moves"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-javascript",children:'const Player = pc.createScript("player");\n\nPlayer.prototype.update = function (dt) {\n    const pos = new pc.Vec3(0, 0, 0);\n    if (this.app.keyboard.isPressed(pc.KEY_LEFT)) {\n        pos.x = -dt;\n    }\n    if (this.app.keyboard.isPressed(pc.KEY_RIGHT)) {\n        pos.x = dt;\n    }\n    if (this.app.keyboard.isPressed(pc.KEY_UP)) {\n        pos.z = -dt;\n    }\n    if (this.app.keyboard.isPressed(pc.KEY_DOWN)) {\n        pos.z = dt;\n    }\n    if (!pos.equals(new pc.Vec3(0, 0, 0))) {\n        this.entity.translate(pos);\n\n        // Added\n        const { x, y, z } = this.entity.getPosition();\n        this.app.fire("loadbalancing:sendPlayerPosition", { x, y, z });\n    }\n};\n'})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"this.app.fire"})," ",(0,o.jsx)(e.a,{href:"/user-manual/scripting/communication/",children:"communication"})," between scripts."]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"done",children:"Done!"}),"\n",(0,o.jsx)(e.p,{children:"You can now play multiplayer in Photon!"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:"/images/tutorials/multiplayer-photon/16.gif",alt:"Project"})}),"\n",(0,o.jsx)(e.p,{children:"You can create a room using Photon and synchronize the positions of players with each other."}),"\n",(0,o.jsxs)(e.p,{children:["Although this project was only a simple real-time communication between players, you can also create a project that includes matchmaking. For the full project, including room creation and room listings, please ",(0,o.jsx)(e.a,{href:"https://playcanvas.com/project/926999/",children:"click here"})," ."]})]})}function d(n={}){const{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(h,{...n})}):h(n)}},11151:(n,e,t)=>{t.d(e,{Z:()=>r,a:()=>s});var o=t(67294);const a={},i=o.createContext(a);function s(n){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:s(n.components),o.createElement(i.Provider,{value:e},n.children)}}}]);